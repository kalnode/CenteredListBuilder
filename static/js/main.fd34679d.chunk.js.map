{"version":3,"sources":["assets/logo.svg","assets/github.svg","components/Logo.js","components/Header.js","components/Footer.js","components/ScrollToTop.js","components/ContainerControl.js","views/about.js","components/ListStyler.js","components/ListOutput.js","components/Button.js","components/ReadMore.js","views/tool.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["module","exports","LogoImage","style","height","src","logo","className","alt","Header","props","activeClassName","to","margin","textAlign","Logo","marginTop","marginBottom","id","exact","href","GithubIcon","Footer","Date","getFullYear","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","ContainerControl","useState","containerWidth","setWidth","containerParent","setContainer1","containerInner","setContainer2","onClick","clientHeight","ref","divElement","defaultIndex","onSelect","index","children","About","ListStyler","listStyles","useSelector","state","selectedListStyle","listStyle","dispatch","useDispatch","console","log","type","payload","map","item","key","bullet","title","ListOutput","listTechnique","RenderedListRAWCode","RenderedList","List","split","filter","n","name","line","trim","join","svg","Code","ToggleBtn","activeCls","setActive","onToggle","ReadMore","readExpanded","setExpanded","Button","Tool","listOutput","listPlaceholder","placeholder","wrap","onChange","e","changeList","target","value","ListStyle","App","path","component","routeAbout","routeTool","from","Boolean","location","hostname","match","initialState","techniques","settingsModal","open","store","createStore","action","Object","assign","listInput","posts","items","concat","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,0MCS5BC,MANf,WACE,OACE,yBAAKC,MAAO,CAACC,OAAQ,OAAQC,IAAKC,IAAMC,UAAU,OAAOC,IAAI,U,iBCyBlDC,MAzBf,SAAgBC,GACd,OACE,oCACA,kBAAC,IAAD,CAASC,gBAAgB,YAAYC,GAAG,UACtC,yBAAKT,MAAO,CAACU,OAAQ,MAAMC,UAAW,WACpC,kBAACC,EAAD,MACA,6BACE,wBAAIZ,MAAO,CAACa,UAAW,MAAOC,aAAc,UAA5C,iBACA,wBAAId,MAAO,CAACa,UAAW,QAAvB,iBAKN,wBAAIE,GAAG,cACL,4BAAI,kBAAC,IAAD,CAASC,OAAO,EAAMR,gBAAgB,YAAYC,GAAG,UAArD,UACJ,4BAAI,kBAAC,IAAD,CAASD,gBAAgB,YAAYC,GAAG,SAAxC,iBAGN,yBAAKM,GAAG,gBACN,uBAAGE,KAAK,wDAAuD,yBAAKjB,MAAO,CAACC,OAAQ,OAAQC,IAAKgB,IAAYd,UAAU,OAAOC,IAAI,SAAlI,cCdSc,MARf,WACE,OACE,yBAAKJ,GAAG,UACN,gDAAwB,IAAIK,MAAOC,cAAnC,OAAwD,uBAAGJ,KAAK,uBAAR,eAAxD,WAAwG,uBAAGA,KAAK,wDAAR,aCF/F,SAASK,IAAe,IAC7BC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,K,mBCPM,SAASK,EAAiBrB,GAAQ,IAAD,EAETsB,mBAAS,GAFA,mBAErCC,EAFqC,KAErBC,EAFqB,OAGLF,mBAAS,MAHJ,mBAGvCG,EAHuC,KAGtBC,EAHsB,OAINJ,mBAAS,MAJH,mBAIvCK,EAJuC,KAIvBC,EAJuB,KAW5C,OACI,yBAAK/B,UAAU,mBAAmBgC,QAAS,WAL9CJ,EAAgB/B,OAASiC,EAAeG,aAAe,IAAM,MAKIC,IAAM,SAACC,GAAiBN,EAAcM,KAChG,yBAAKnC,UAAU,YACX,kBAAC,IAAD,CAAMoC,aAAc,EAAGC,SAAU,SAAAC,GAAK,OAAIX,EAASW,KAC/C,kBAAC,IAAD,KACI,kBAAC,IAAD,cACA,kBAAC,IAAD,cACA,kBAAC,IAAD,cACA,kBAAC,IAAD,cACA,kBAAC,IAAD,iBAGJ,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,QAIR,yBAAKtC,UAAW,cAAgB0B,EAAgBQ,IAAM,SAACC,GAAiBJ,EAAcI,KACjFhC,EAAMoC,WCkCRC,MAjEf,WAEE,OACE,yBAAK7B,GAAG,QAAQX,UAAU,SAExB,6BAASW,GAAG,SACV,wBAAIf,MAAO,CAACa,UAAW,QAAvB,gDAEA,kBAACe,EAAD,KACE,yBAAKb,GAAG,aAAaX,UAAU,gCAC/B,4BACM,4BAAI,2CACJ,4BAAI,sCACJ,4BAAI,sCACJ,4BAAI,8CACJ,4BAAI,wCACJ,4BAAI,yCACJ,4BAAI,4CACJ,4BAAI,oDACJ,4BAAI,uCACJ,4BAAI,0CACJ,4BAAI,uCACJ,4BAAI,6CAKZ,yBAAKA,UAAU,MAAMJ,MAAO,CAACa,UAAW,QACtC,kBAAC,IAAD,CAAST,UAAU,YAAYI,gBAAgB,YAAYC,GAAG,SAA9D,kBAMJ,6BAASL,UAAU,WACjB,yDACA,8HACA,4BACE,qDACA,+DACA,sDACA,yDACA,gDACA,uCAAY,2BAAG,wFAGjB,oEACA,sYAEA,2BAAG,uBAAGa,KAAK,yYAAR,qDAIH,mCACA,oFAEA,yBAAKb,UAAU,OACb,uDACA,kBAAC,IAAD,CAASA,UAAU,YAAYI,gBAAgB,YAAYC,GAAG,SAA9D,kB,OC1DK,SAASoC,EAAWtC,GAEjC,IAAMuC,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,cACxCG,EAAoBF,aAAY,SAAAC,GAAK,OAAIA,EAAME,aAE/CC,EAAWC,cAOjB,OACE,kBAAC,IAAD,CAAOZ,aAAcS,EACnBR,SAAU,SAAAC,GAAWW,QAAQC,IAAI,iBAAmBZ,GALtDS,EAAS,CAAEI,KAAM,YAAaC,QAKyCd,MACrE,kBAAC,IAAD,KACGI,EAAWW,KAAK,SAACC,EAAMhB,GAAP,OACjB,kBAAC,IAAD,CAAKiB,IAAKjB,GAAO,4BAAKgB,EAAKE,QAAY,4BAAKF,EAAKG,YAIlDf,EAAWW,KAAK,SAACC,EAAMhB,GAAP,OACf,kBAAC,IAAD,CAAUiB,IAAKjB,QCvBR,SAASoB,EAAWvD,GAEjC,IAAMwD,EAAgBhB,aAAY,SAAAC,GAAK,OAAIA,EAAMe,iBAC3CjB,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,cACxCI,EAAYH,aAAY,SAAAC,GAAK,OAAIA,EAAME,aAEzCc,EAAsB,GAGtBC,EAAe1D,EAAM2D,KACxBC,MAAM,MACNC,QAAO,SAAAC,GAAC,OAAIA,KACZZ,KAAI,SAACa,EAAM5B,GAAP,OACH,wBAAIiB,IAAKjB,GACP,8BACG4B,OAiHP,OA3GsB,IAAlBP,GAEFC,EAAsB,oEAAgEzD,EAAM2D,KAC3FC,MAAM,MACNC,QAAO,SAAAG,GAAI,MAAoB,KAAhBA,EAAKC,UAEpBf,KAAI,SAAAc,GAAI,8BAAqBA,EAArB,qBAA2CE,KAAK,IAAM,kBAE/DT,GAAmB,2wCAgCvBA,GAAuB,cAAgBlB,EAAWI,GAAWwB,IAE7DV,GAAmB,aAEY,IAAlBD,GAGPC,EAAsB,oEAAgEzD,EAAM2D,KAC3FC,MAAM,MACNC,QAAO,SAAAG,GAAI,MAAoB,KAAhBA,EAAKC,UAEpBf,KAAI,SAAAc,GAAI,8BAAqBA,EAArB,qBAA2CE,KAAK,IAAM,kBAEjET,GAAmB,y3BAqCvBA,GAAuB,qBAAuBlB,EAAWI,GAAWU,OAAS,IAE7EI,GAAmB,aAEY,IAAlBD,GAETE,EAAe,kCACfD,EAAsB,mDAKtBC,EAAe,kBACfD,EAAsB,wBAIpBzD,EAAMoE,KAEJ,6BAAK,8BAAOX,IAId,yBAAKjD,GAAG,eAAeX,UAAW,gBAAkB2D,EAAlB,eAAmDb,GAAW,4BAAKe,ICzH5FW,MAdf,SAAmBrE,GAAO,MAESsB,mBAAS,MAFlB,mBAEfgD,EAFe,KAEJC,EAFI,KAStB,OACI,4BAAQ/D,GAAIR,EAAMQ,GAAIX,UAAWyE,EAAWzC,QAAU,kBALlD7B,EAAMwE,UAAYxE,EAAMwE,gBAC5BD,EAAUD,EAAY,KAAO,eAI4CtE,EAAMoC,WCTxE,SAASqC,EAASzE,GAAQ,IAAD,EAEAsB,mBAAS,GAFT,mBAE7BoD,EAF6B,KAEfC,EAFe,KAIpC,OACI,yBAAK9E,UAAW,CAAC,WAA6B,IAAjB6E,EAAqB,WAAa,cAAcR,KAAK,MAC9E,6BAAMlE,EAAMoC,UACZ,kBAACwC,EAAD,CAAQJ,SAAU,kBAAMG,EAA6B,IAAjBD,EAAqB,EAAI,KAAuB,IAAjBA,EAAqB,YAAc,cCDlH,IAwIeG,EAxIF,WAGX,IAAMC,EAAatC,aAAY,SAAAC,GAAK,OAAIA,EAAMqC,cACxCC,EAAkBvC,aAAY,SAAAC,GAAK,OAAIA,EAAMsC,mBAC7CvB,EAAgBhB,aAAY,SAAAC,GAAK,OAAIA,EAAMe,iBAG3CZ,EAAWC,cAWjB,OACE,yBAAKrC,GAAG,OAAOX,UAAU,SAEvB,6BAASW,GAAG,YACV,wBAAIX,UAAU,UAAd,KACA,6BACE,yBAAKA,UAAU,eAAf,iCACA,8BAAUmF,YAAaF,GAA0BC,EAAiBE,KAAK,MAAMC,SAAU,SAAAC,GAAC,OAhBhG,SAAoBA,GAClBvC,EAAS,CAAEI,KAAM,cAAeC,QAASkC,IAeyDC,CAAWD,EAAEE,OAAOC,YAMpH,6BAAS9E,GAAG,aACV,wBAAIX,UAAU,UAAd,KACA,6BACE,yBAAKA,UAAU,eAAf,wBAEA,yBAAKA,UAAU,UACT,kBAACyC,EAAD,CAAYiD,UAAW/B,OAMjC,6BAAShD,GAAG,aACV,wBAAIX,UAAU,UAAd,KACA,6BACE,6BACE,yBAAKA,UAAU,eAAf,sBAEF,yBAAKA,UAAU,SAEf,kBAAC,IAAD,CAAMoC,aAAcuB,EAAetB,SAAU,SAAAC,GArCnDS,EAAS,CAAEI,KAAM,gBAAiBC,QAqCuCd,KAAQtC,UAAU,mBACnF,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAK,kCACL,kBAAC,IAAD,KAAK,kCACL,kBAAC,IAAD,KAAK,mCAGP,kBAAC,IAAD,KAEE,yBAAKA,UAAU,SAAQ,2CAAoB,2EAE3C,kBAAC4E,EAAD,KACE,oWAAyU,uBAAG/D,KAAK,gDAAR,kBAAzU,KAEA,gJAHF,SAME,4BACE,qFACA,iEACA,uIACA,+KAGF,kKAEA,6PAMJ,kBAAC,IAAD,KACA,yBAAKb,UAAU,SAAQ,2CAAoB,sEACrC,kBAAC4E,EAAD,KACE,wTAEA,wEACA,4FAJF,SAOE,4BACE,gEACA,qGACA,oIAKV,kBAAC,IAAD,KACA,yBAAK5E,UAAU,SAAQ,2CAAoB,2CAEvC,kBAAC4E,EAAD,KACE,uJAEA,mLAEA,0YAON,6BACE,yBAAK5E,UAAU,SAAf,WACA,kBAACwB,EAAD,KACI,kBAACkC,EAAD,CAAYI,KAAMmB,GAA0BC,MAIlD,6BACE,yBAAKlF,UAAU,SAAf,QACA,kBAAC0D,EAAD,CAAYI,KAAMmB,GAA0BC,EAAiBX,KAAK,eCrGjEoB,EAvBH,WAEV,OACE,yBAAK3F,UAAU,OACb,gCACE,kBAAC,EAAD,OAGF,8BACE,kBAAC,IAAD,CAAO4F,KAAK,SAAShF,OAAK,EAACiF,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWE,IAC/B,kBAAC,IAAD,CAAUnF,OAAK,EAACoF,KAAK,IAAI3F,GAAG,YAG9B,gCACE,kBAAC,EAAD,OAGF,kBAACa,EAAD,QChBc+E,QACa,cAA7B3E,OAAO4E,SAASC,UAEa,UAA7B7E,OAAO4E,SAASC,UAEhB7E,OAAO4E,SAASC,SAASC,MACrB,2D,YCfFC,EAAe,CAGnBnB,gBAAiB,0EAGjBD,WAAY,GAEZvC,WAAY,CACV,CAAE/B,GAAI,IAAK8C,MAAO,MAAOD,OAAQ,SAAK8C,WAAY,CAAC,EAAG,EAAG,GAAIhC,IAAI,2RACjE,CAAE3D,GAAI,IAAK8C,MAAO,OAASD,OAAQ,IAAK8C,WAAY,CAAC,EAAG,EAAG,GAAIhC,IAAI,sRACnE,CAAE3D,GAAI,IAAK8C,MAAO,gBAAiBD,OAAQ,IAAK8C,WAAY,CAAC,EAAG,EAAG,GAAIhC,IAAI,qRAC3E,CAAE3D,GAAI,IAAK8C,MAAO,SAAUD,OAAQ,SAAK8C,WAAY,CAAC,EAAG,EAAG,GAAIhC,IAAI,2RACpE,CAAE3D,GAAI,IAAK8C,MAAO,cAAeD,OAAQ,IAAK8C,WAAY,CAAC,EAAG,EAAG,GAAIhC,IAAI,sRACzE,CAAE3D,GAAI,IAAK8C,MAAO,aAAcD,OAAQ,KAAM8C,WAAY,CAAC,EAAG,EAAG,GAAIhC,IAAI,wRAI3EX,cAAe,EACfb,UAAW,EAGXyD,cAAe,CACbC,MAAM,IA2CKC,EAFDC,aAnCE,WAAmC,IAAlC9D,EAAiC,uDAAzByD,EAAcM,EAAW,uCAE5C,MAAoB,eAAhBA,EAAOxD,KACFyD,OAAOC,OAAO,GAAIjE,EAAO,CAC9BkE,UAAWH,EAAOvD,UAIF,gBAAhBuD,EAAOxD,KACFyD,OAAOC,OAAO,GAAIjE,EAAO,CAC5BqC,WAAY0B,EAAOvD,UAIL,aAAhBuD,EAAOxD,KACFyD,OAAOC,OAAO,GAAIjE,EAAO,CAC9BmE,MAAOnE,EAAMoE,MAAMC,OAAON,EAAOvD,WAIjB,kBAAhBuD,EAAOxD,KACFyD,OAAOC,OAAO,GAAIjE,EAAO,CAC9Be,cAAegD,EAAOvD,UAIN,cAAhBuD,EAAOxD,KACFyD,OAAOC,OAAO,GAAIjE,EAAO,CAC9BE,UAAW6D,EAAOvD,UAInBR,KCrDTtB,OAAOmF,MAAQA,EAGfS,IAASC,OACL,kBAAC,IAAD,CAAUV,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,EAAD,QAGRW,SAASC,eAAe,SF+GpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GAC/BA,EAAaC,kB","file":"static/js/main.fd34679d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.12fd5c12.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.edd19191.svg\";","import React from 'react';\nimport logo from '../assets/logo.svg';\n\nfunction LogoImage() {\n  return (\n    <img style={{height: \"4em\"}} src={logo} className=\"logo\" alt=\"logo\" />\n  );\n}\n\nexport default LogoImage;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../components/Logo';\nimport GithubIcon from '../assets/github.svg';\n\nfunction Header(props) {\n  return (\n    <>\n    <NavLink activeClassName='is-active' to='/about'>\n      <div style={{margin: \"1em\",textAlign: \"center\"}}>\n        <Logo />\n        <div>\n          <h1 style={{marginTop: \"0em\", marginBottom: \"0.3em\"}}>Centered-list</h1>\n          <h2 style={{marginTop: \"0em\"}}>Builder v1</h2>\n        </div>\n      </div>\n    </NavLink>\n\n    <ul id=\"navigation\">\n      <li><NavLink exact={true} activeClassName='is-active' to='/about'>About</NavLink></li>\n      <li><NavLink activeClassName='is-active' to='/tool'>Make a List</NavLink></li>\n    </ul>\n\n    <div id=\"headerGithub\">\n      <a href=\"https://github.com/TheMangoTrain/CenteredListBuilder\"><img style={{height: \"2em\"}} src={GithubIcon} className=\"logo\" alt=\"logo\" /> GitHub</a>\n    </div>\n    </>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <div id=\"footer\">\n      <div>Copyright &copy; {(new Date().getFullYear())}&nbsp;<a href=\"https://kreation.ca\">Kal Erikson</a> • <a href=\"https://github.com/TheMangoTrain/CenteredListBuilder\">GitHub</a></div>\n    </div>\n  );\n}\n\nexport default Footer;","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React, {useState} from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nexport default function ContainerControl(props) {\n\n    const [containerWidth, setWidth] = useState(2);\n    var [containerParent, setContainer1] = useState(null);  \n    var [containerInner, setContainer2] = useState(null); \n\n    function setHeight() {\n     containerParent.height = containerInner.clientHeight + 200 + \"px\";\n\n    }\n \n    return (\n        <div className=\"containerControl\" onClick={() => setHeight()} ref={ (divElement) => { setContainer1(divElement) } }>\n            <div className=\"controls\">\n                <Tabs defaultIndex={2} onSelect={index => setWidth(index)}>\n                    <TabList>\n                        <Tab>200px</Tab>\n                        <Tab>300px</Tab>\n                        <Tab>500px</Tab>\n                        <Tab>800px</Tab>\n                        <Tab>Animate</Tab>\n                    </TabList>\n\n                    <TabPanel></TabPanel>\n                    <TabPanel></TabPanel>\n                    <TabPanel></TabPanel>\n                    <TabPanel></TabPanel>\n                    <TabPanel></TabPanel>\n                </Tabs>\n    \n            </div>\n            <div className={`inner width` + containerWidth} ref={ (divElement) => { setContainer2(divElement) } }>   \n                {props.children}\n            </div>                \n        </div>\n    );\n}\n\n\n","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport ContainerControl from '../components/ContainerControl';\n\nfunction About() {\n\n  return (\n    <div id=\"about\" className=\"inner\">\n            \n      <section id=\"intro\">      \n        <h2 style={{marginTop: \"2em\"}}>A helper to achieve a list style like below:</h2>\n\n        <ContainerControl>\n          <div id=\"intro-list\" className=\"centered-list centered-list0\">\n          <ul>\n                <li><span>Elephant</span></li>\n                <li><span>Dog</span></li>\n                <li><span>Cat</span></li>\n                <li><span>Rhinocerous</span></li>\n                <li><span>Horse</span></li>\n                <li><span>Parrot</span></li>\n                <li><span>Crocodile</span></li>\n                <li><span>Tyrannosaurus Rex</span></li>\n                <li><span>Bear</span></li>\n                <li><span>Giraffe</span></li>\n                <li><span>Wolf</span></li>\n                <li><span>Dolphin</span></li>\n            </ul>\n          </div>             \n        </ContainerControl>\n\n        <div className=\"cta\" style={{marginTop: \"8em\"}}>\n          <NavLink className=\"buttonCTA\" activeClassName='is-active' to='/tool'>Make a List!</NavLink>\n        </div>\n\n      </section>\n\n\n      <section className=\"content\">\n        <h3>Why is this list special?</h3>\n        <p>This is an uncommon list style, and typically not a feature in text editors (web or otherwise).</p>\n        <ul>\n          <li>Centered and bulleted</li>\n          <li>Evenly (or nicely) spaced items</li>\n          <li>Responsive and dynamic</li>\n          <li>Uses plain HTML structure</li>\n          <li>Ideally CSS-only</li>\n          <li>... and <u><i>has no bullet appearing on the start or end of a line.</i></u></li>\n        </ul>\n\n        <h3>Inspiration: MUSIC FESTIVAL POSTERS!</h3>\n        <p>Festival posters often feature long, dense band lists (the \"line up\") where seperators don't occur on the edges of the list. This list style is easy to pull off in fixed printed designs. The same can't be said for dynamic media (like a webpage), so on festival websites the classic \"line up\" style is often a static image --- the same as the printed design.</p>\n\n        <p><a href=\"https://www.google.ca/search?hl=en&tbm=isch&sxsrf=ACYBGNR-G6eP0lhSIWqGLk0TQdX-o4W7DQ%3A1579123351670&source=hp&biw=1920&bih=965&ei=l4IfXrjKJs7ctAbWwLGgBw&q=music+festival+posters&oq=music+festival+posters&gs_l=img.3..0l3j0i5i30l7.1662.5013..5104...0.0..0.241.2266.17j4j2......0....1..gws-wiz-img.....10..35i362i39j35i39j0i131.tYLOaRhGNJc&ved=0ahUKEwj48bjzxIbnAhVOLs0KHVZgDHQQ4dUDCAU&uact=5\">\n          Google Image Search for \"Music Festival Posters\"\n        </a></p>\n      \n        <h3>How</h3>\n        <p>There's a few solutions involving CSS-only and/or JS!</p>\n\n        <div className=\"cta\">\n          <h3>Make a centered list...</h3>\n          <NavLink className=\"buttonCTA\" activeClassName='is-active' to='/tool'>Start here</NavLink>\n        </div>\n      </section>\n    </div>    \n  );\n}\n\nexport default About;","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nexport default function ListStyler(props) {\n\n  const listStyles = useSelector(state => state.listStyles);\n  const selectedListStyle = useSelector(state => state.listStyle);\n\n  const dispatch = useDispatch();\n\n  function setStyle(e) {\n    // Pass data into a particular store reducer action\n    dispatch({ type: 'SET_STYLE', payload: e})\n  }\n\n  return (\n    <Tabs  defaultIndex={selectedListStyle}\n      onSelect={index => { console.log(\"clicked item: \" + index); setStyle(index) }}>\n      <TabList>\n        {listStyles.map( (item, index) => (\n        <Tab key={index}><h2>{item.bullet}</h2><h5>{item.title}</h5></Tab>\n        ))}\n      </TabList>\n\n      {listStyles.map( (item, index) => (\n        <TabPanel key={index}></TabPanel>\n        ))}\n    </Tabs>\n  );\n}","import React from 'react';\nimport { useSelector } from \"react-redux\";\n\nexport default function ListOutput(props) {\n\n  const listTechnique = useSelector(state => state.listTechnique);\n  const listStyles = useSelector(state => state.listStyles);\n  const listStyle = useSelector(state => state.listStyle);\n\n  var RenderedListRAWCode = \"\";\n  \n  // For outputting regular styled list\n  var RenderedList = props.List\n  .split('\\n')\n  .filter(n => n)\n  .map((name, index) => (\n    <li key={index}>\n      <span>\n        {name}\n      </span>\n    </li>\n  ));\n\n\n  if (listTechnique === 0 ) {\n      // For outputting visible HTML code in the browser (inside <pre><code>) \n    RenderedListRAWCode = '<!-- HTML code -->\\n\\n<div class=\"centered-list\">\\n\\t<ul>\\n' + props.List\n    .split('\\n')\n    .filter(line => line.trim() !== '')\n    // Getting object as string literal (via backticks), and including \\n and \\t for nice formatting\n    .map(line => `\\t\\t<li><span>${line}</span></li>\\n`).join('') + '\\t</ul>\\n</div>';\n\n    RenderedListRAWCode += `\\n\\n<!-- CSS code -->\\n\\n<style>\n.centered-list {\n  /* useful to center the entire list in very narrow container widths */\n  display: flex;\n  justify-content: center;\n}\n\n.centered-list ul {\n  padding: 0;\n  margin: 0;\n  text-align: center;\n}\n\n.centered-list ul li {\n  /* This is important as we get our centering of list items, and at the same time browsers will trim the white-space from the end of the line (see below) */\n  display: inline;\n}      \n.centered-list ul li span {\n  /* OPTIONAL: This is items with multiple words don't wrap to a new line. */\n  white-space: nowrap;\n}\n\n.centered-list ul li::after {\n  /* This is our magic trick. HTML browsers will strip a blank space from the ends of inline elements. */\n  content: \" \";\n\n  /* This is how we control spacing between items. It only applies to visible characters (ie the middle bullets). Using 'padding' or 'margin' would cause problems as they would still get applied to the last item in a line. */\n  letter-spacing: 1em;\n\n  /* This is how we actually render a visual bullet, in lieu of using content \" \". Here, I'm using an inline base64 SVG which contains a text element. You can control color and other properties within. An image can be used here too, inline base64 or external. */\n`;\n        \nRenderedListRAWCode += \"background:\" + listStyles[listStyle].svg;\n\nRenderedListRAWCode += `}</style>`;  \n     \n  } else if (listTechnique === 1 ) {\n\n      // For outputting visible HTML code in the browser (inside <pre><code>) \n      RenderedListRAWCode = '<!-- HTML code -->\\n\\n<div class=\"centered-list\">\\n\\t<ul>\\n' + props.List\n      .split('\\n')\n      .filter(line => line.trim() !== '')\n      // Getting object as string literal (via backticks), and including \\n and \\t for nice formatting\n      .map(line => `\\t\\t<li><span>${line}</span></li>\\n`).join('') + '\\t</ul>\\n</div>';\n\n    RenderedListRAWCode += `\\n\\n<!-- CSS code -->\\n\\n<style>\n.centered-list {\n  position: relative;\n  overflow: hidden;\n}\n\n.centered-list ul {\n  display: flex;\n  flex-wrap: wrap;\n\n  /* This negative margin is important, it's what hides the bullets on the left-side of the list */\n  margin-left: -0.2em;  \n  padding: 0;\n  list-style-type: circle;\n}\n  \n.centered-list li {\n  /* Flex-grow: 1 is our main trick... it stretches list items to full width, so we end up with a vertical row of bullets on the left-side. */\n  flex-grow: 1;\n  flex-basis: auto;\n  margin: .25em 0;\n  padding: 0 1em;\n  position: relative;\n}\n\n.centered-list ul li span {\n  text-align: center;\n  white-space: nowrap;  \n  \n  /* The following are important for spacing items. */\n  left: -0.2em;  \n  position: relative;\n  display: block;\n} \n\n/* This is where we control bullet style. */\n.centered-list ul { `;\nRenderedListRAWCode += 'list-style-type: \"' + listStyles[listStyle].bullet + '\"';\n  \nRenderedListRAWCode += `}</style>`;  \n      \n  } else if (listTechnique === 2 ) {\n\n    RenderedList = \"(Javascript method coming soon)\"\n    RenderedListRAWCode = \"<!-- (Javascript method coming soon) -->\";\n\n\n\n  } else {\n    RenderedList = \"(No list found)\"\n    RenderedListRAWCode = \"(No code to display)\";\n  }\n\n  // Check if the instance is for \"code\" view (raw html in browser)\n  if (props.Code) {\n      return (\n        <pre><code>{RenderedListRAWCode}</code></pre>    \n      );\n  } else {\n    return (\n      <div id=\"preview-list\" className={`centered-list` + listTechnique + ` bulletStyle` + listStyle}><ul>{RenderedList}</ul></div>\n    );\n  }\n}","import React, {useState} from 'react';\n\nfunction ToggleBtn(props) {\n    // const activeCls = (props.isActive) ? ' is-active' : '';\n    const [activeCls, setActive] = useState(null);\n\n    function runFuncs() {\n        if (props.onToggle) { props.onToggle(); }\n        setActive(activeCls ? null : 'is-active');\n    }\n    \n    return (\n        <button id={props.id} className={activeCls} onClick={ () => runFuncs()}>{props.children}</button>\n    );\n}\n\nexport default ToggleBtn;","import React, {useState} from \"react\";\nimport Button from '../components/Button';\n\nexport default function ReadMore(props) {\n\n    const [readExpanded, setExpanded] = useState(0);\n          \n    return (\n        <div className={[\"readMore\", readExpanded === 1 ? \"readOpen\" : \"readClosed\"].join(' ')}>\n            <div>{props.children}</div>\n            <Button onToggle={() => setExpanded(readExpanded === 1 ? 0 : 1) }>{readExpanded === 1 ? \"Read Less\" : \"Read More\" }</Button>  \n        </div>                \n    );\n}","import React from 'react';\nimport ListStyler from '../components/ListStyler';\nimport ListOutput from '../components/ListOutput';\nimport ReadMore from '../components/ReadMore';\nimport ContainerControl from '../components/ContainerControl';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\n\nconst Tool = () => {\n\n  // Redux store variables\n  const listOutput = useSelector(state => state.listOutput);\n  const listPlaceholder = useSelector(state => state.listPlaceholder);\n  const listTechnique = useSelector(state => state.listTechnique);\n\n  // For sending data back into Redux store\n  const dispatch = useDispatch();\n\n  function changeList(e) {\n    dispatch({ type: 'OUTPUT_LIST', payload: e })   \n  }\n\n  function setTechnique(e) {\n    dispatch({ type: 'SET_TECHNIQUE', payload: e })   \n  }\n\n\n  return (\n    <div id=\"tool\" className=\"inner\">\n        \n      <section id=\"appInput\">\n        <h2 className=\"number\">1</h2>\n        <div>\n          <div className=\"instruction\">Paste or type your list here:</div>\n          <textarea placeholder={listOutput ? listOutput : listPlaceholder} wrap=\"off\" onChange={e => changeList(e.target.value)} />\n        </div>\n\n        {/*<div className=\"list\"><ListOutput List={listOutput} /></div>*/}\n      </section>\n\n      <section id=\"appStyler\">\n        <h2 className=\"number\">2</h2>\n        <div>\n          <div className=\"instruction\">Choose bullet style:</div>\n\n          <div className=\"styler\">            \n                <ListStyler ListStyle={listTechnique} />\n          </div>\n      \n        </div>\n      </section>\n\n      <section id=\"appResult\">\n        <h2 className=\"number\">3</h2>\n        <div>\n          <div>\n            <div className=\"instruction\">Choose technique:</div>\n          </div>\n          <div className=\"inner\">\n\n          <Tabs defaultIndex={listTechnique} onSelect={index => setTechnique(index)} className=\"selectTechnique\">\n            <TabList>\n              <Tab><h3>A</h3></Tab>\n              <Tab><h3>B</h3></Tab>\n              <Tab><h3>C</h3></Tab>\n            </TabList>\n\n            <TabPanel>\n            \n              <div className=\"title\"><h2>Technique A</h2><h4>CSS-only, using white-space trimming trick</h4></div>\n\n              <ReadMore>\n                <p>This technique is based on how HTML-compliant web browsers handle extraneous spaces (white space). Content of an ::after pseudo element, that occurs on the last inline element (end of line), will get automatically trimmed by browsers if the content is set to a plain white space (content: \" \"). This browser characteristic is <a href=\"https://stackoverflow.com/a/40963855/4378314\">described here</a>.</p>\n\n                <p>Leveraging this quirk, we can now have some measure of control over one edge of our list (the entire right side).</p>\n\n                Notes:\n                <ul>\n                  <li>Standard list bullets are disabled (list-style: none)</li>\n                  <li>List items set to display: inline</li>\n                  <li>List items each have an ::after pseudo element where we visually render a bullet via a background image</li>\n                  <li>Each ::after pseudo element has a content: \" \" applied, which, for the last list item in every line, gets automatically trimmed by the browser</li>\n                </ul>\n            \n                <p>Since the white-space trimming action of browsers is based on HTML standards, we can reliably count on this list styling technique.</p>\n\n                <p>As well, spacing between the list items can be controlled with letter-spacing, which affects the content: \" \". Using padding isn't suitable, as padding still seems to apply to pseudo after elements at the ends of lines.</p>\n              </ReadMore>\n\n                  \n            </TabPanel>\n\n            <TabPanel>\n            <div className=\"title\"><h2>Technique B</h2><h4>CSS-only, flexbox and negative margin</h4></div>\n                  <ReadMore>\n                    <p>This technique is based on flexbox's grow attribute, which extends our list items to both left and right edges of the container. This results in the left-side of our list having a nice vertical stack of bullets which we can then hide with a negative margin on the parent container.</p>\n\n                    <p>Pro: Regular list bullets are still used.</p>\n                    <p>Con: You can't control item spacing as easily as technique A.</p>\n\n                    Notes:\n                    <ul>\n                      <li>The list is set to display: flex</li>\n                      <li>List items are set to flex: 1, which means each list line gets filled</li>\n                      <li>The parent container has a negative left margin, enough to hide the left-side bullets of the list</li>\n                    </ul>\n                  </ReadMore>\n            </TabPanel>\n\n            <TabPanel>\n            <div className=\"title\"><h2>Technique C</h2><h4>Javascript</h4></div>\n\n                <ReadMore>\n                  <p>This technique involves using Javascript to scan a list and disabling the first list bullet that occurs on a line break.</p>\n\n                  <p>The advantage here is you get full styling control over the list, not being limited by some CSS trick, and remove any worry about CSS compatibility.</p>\n\n                  <p>This disadvantage is performance. First, this is yet another script to load and run, so naturally it is slower than a CSS-only method. Second, the size of your list, size of your page and/or any other heavy processes will have an affect on performance. Users may see moments where the list appears without full styling and then abruptly changes to new styling.</p>\n                </ReadMore>\n            </TabPanel>\n\n          </Tabs>\n\n        \n            <div>\n              <div className=\"title\">Preview</div>\n              <ContainerControl>\n                  <ListOutput List={listOutput ? listOutput : listPlaceholder} />\n                </ContainerControl>\n            </div>\n\n            <div>\n              <div className=\"title\">Code</div>\n              <ListOutput List={listOutput ? listOutput : listPlaceholder} Code=\"true\" />\n            </div>\n\n          </div>\n        </div>\n      </section>    \n    </div>\n    \n  );\n}\n\nexport default Tool;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport './assets/App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ScrollToTop from './components/ScrollToTop';\nimport routeAbout from './views/about';\nimport routeTool from './views/tool';\n\n\nconst App = () => {\n \n  return (\n    <div className=\"App\">\n      <header>\n        <Header />\n      </header>\n    \n      <main>      \n        <Route path=\"/about\" exact component={routeAbout}/>\n        <Route path=\"/tool\" component={routeTool}/>\n        <Redirect exact from=\"/\" to=\"/about\" />\n      </main>\n\n      <footer>\n        <Footer />\n      </footer>\n\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n            headers: { 'Service-Worker': 'script' }\n        })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import { createStore } from 'redux'\n\n// Global store object\nconst initialState = {\n\n  // Store pre-loaded list\n  listPlaceholder: \"Some Item\\nAnother Item\\nItem\\nA Longer Item This Is\\nItem Item\\netc...\",\n\n  // Store user-generated list\n  listOutput: \"\",\n\n  listStyles: [\n    { id: \"1\", title: \"Dot\", bullet: \"•\", techniques: [1, 2, 3], svg: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25'%3E%3Ctext x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' class='text' fill='red' style='font-size:1em;font-family:sans-serif;'%3E•%3C/text%3E%3C/svg%3E\");`},\n    { id: \"2\", title: \"Dash\",  bullet: \"-\", techniques: [1, 2, 3], svg: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25'%3E%3Ctext x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' class='text' fill='red' style='font-size:1em;font-family:sans-serif;'%3E-%3C/text%3E%3C/svg%3E\");`},\n    { id: \"3\", title: \"Vertical Line\", bullet: \"|\", techniques: [1, 2, 3], svg: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25'%3E%3Ctext x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' class='text' fill='red' style='font-size:1em;font-family:sans-serif;'%3E|%3C/text%3E%3C/svg%3E\")`},\n    { id: \"4\", title: \"Square\", bullet: \"■\", techniques: [1, 2, 3], svg: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25'%3E%3Ctext x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' class='text' fill='red' style='font-size:1em;font-family:sans-serif;'%3E■%3C/text%3E%3C/svg%3E\");`},\n    { id: \"5\", title: \"Front Slash\", bullet: \"/\", techniques: [1, 2, 3], svg: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25'%3E%3Ctext x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' class='text' fill='red' style='font-size:1em;font-family:sans-serif;'%3E/%3C/text%3E%3C/svg%3E\");`},\n    { id: \"6\", title: \"Back Slash\", bullet: \"\\\\\", techniques: [1, 2, 3], svg: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25'%3E%3Ctext x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' class='text' fill='red' style='font-size:1em;font-family:sans-serif;'%3E\\\\%3C/text%3E%3C/svg%3E\");`},\n  ],\n\n  // Selected technique/style\n  listTechnique: 0,\n  listStyle: 0,\n\n  // Unused, keeping for reference\n  settingsModal: {\n    open: false\n  }\n\n}\n\n// Defining store actions\nconst reducer = (state = initialState, action) => {\n\n      if (action.type === 'INPUT_LIST') {\n        return Object.assign({}, state, {\n          listInput: action.payload\n        })\n      }\n\n      if (action.type === 'OUTPUT_LIST') {\n        return Object.assign({}, state, {\n            listOutput: action.payload\n          })\n      }\n\n      if (action.type === 'ADD_ITEM') {\n        return Object.assign({}, state, {\n          posts: state.items.concat(action.payload)\n        })\n      }\n\n      if (action.type === 'SET_TECHNIQUE') {\n        return Object.assign({}, state, {\n          listTechnique: action.payload\n        })\n      }\n\n      if (action.type === 'SET_STYLE') {\n        return Object.assign({}, state, {\n          listStyle: action.payload\n        })\n      }\n\n  return state\n}\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './assets/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Redux store\nimport { Provider } from 'react-redux';\nimport store from './store/index.js';\nwindow.store = store;\n\n// App is wrapped in Redux Provider, to allow for global store\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// Enable service worker: register().\n// Disable service worker: unregister().\nserviceWorker.unregister();"],"sourceRoot":""}